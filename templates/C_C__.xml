<templateSet group="C/C++">
  <template name="foe" value="for ($AUTO_TYPE$ $VAR$ : $CONTAINER$) {&#10;  $END$&#10;}" description="Iterate range" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="CONTAINER" expression="variableForIteration()" defaultValue="x" alwaysStopAt="true" />
    <variable name="VAR" expression="suggestVariableName()" defaultValue="item" alwaysStopAt="true" />
    <variable name="AUTO_TYPE" expression="autoTypeForRangedForLoop()" defaultValue="auto" alwaysStopAt="true" />
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="fob" value="for (auto $ITER$ = $CONTAINER$.begin(); $COPY_ITER$ != $COPY_CONTAINER$.end(); $COPY_ITER$++) {&#10;  $END$&#10;}" description="Iterate using begin/end member functions" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="CONTAINER" expression="variableForRangeBasedIteration()" defaultValue="&quot;container&quot;" alwaysStopAt="true" />
    <variable name="ITER" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="COPY_ITER" expression="ITER" defaultValue="" alwaysStopAt="false" />
    <variable name="COPY_CONTAINER" expression="CONTAINER" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
  <template name="for" value="for (size_t $INDEX$ = 0; $COPY_INDEX$ &lt; $UPPER_BOUND$; $COPY_INDEX$++) {&#10;  $END$&#10;}" description="Indexed for(;;) loop" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="INDEX" expression="suggestIndexName()" defaultValue="" alwaysStopAt="true" />
    <variable name="COPY_INDEX" expression="INDEX" defaultValue="" alwaysStopAt="false" />
    <variable name="UPPER_BOUND" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OC_STATEMENT_C" value="false" />
      <option name="OC_STATEMENT_CPP" value="true" />
    </context>
  </template>
</templateSet>